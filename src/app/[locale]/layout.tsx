import { ClerkProvider } from "@clerk/nextjs";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { i18nConfig, Locale } from "../../../i18n";
import "../globals.css";
import { Suspense } from "react";
import QueryProvider from "@/providers/query-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return i18nConfig.locales.map((locale: Locale) => ({ locale: locale }));
}

type Props = {
  children: Readonly<React.ReactNode>;
  params: Promise<{
    locale: Locale;
  }>;
};

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;

  return (
    <Suspense>
      <ClerkProvider>
        <QueryProvider>
          <html
            lang={locale}
            dir={locale === "ps" || locale === "fr" ? "RTL" : "LTR"}
          >
            <body
              className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
              {children}
            </body>
          </html>
        </QueryProvider>
      </ClerkProvider>
    </Suspense>
  );
}
